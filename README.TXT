2. The value that is returned after using the getBalance method is 0.
3. if you insert to much money into the the machine it prints the ticket but you dont get a refund and your balance goes back
  to zero.
  If you insert to little money the ticket is still able to print.
5. The ticket is different from the first machine, it now says the new value i inputed.
6. public class Student
   public class LabClass
7. the class diagram had red lines on it and when you would try to compile it you get a error message saying "class, 
   interface, enum or record expected"
   I think the message is clear because it tells us what we are missing and it shows red boxes where the code is missing.
10. The constructor for the class is public TicketMachine(int cost)
11. Two features of the constructor that make it look different than the method is that it is in a yellow box and it has the same name as the class
12. I think these are the types of the fields
    Int
    Student
    Server
13. The names of the fields are:
    alive
    tutor
    game
14. I would say these are the class names:
    Student
    Server
    Person
    Game
15. The order of which the three words are place does matter because if we look at the class diagram after you can see there are red lines meaning that there are errors
16. It is always necessary to have a semicolon at the end of each field declaration because then you will proceed to get an error
17. private int status;  
18. The class belongs to the Student class
19.  public Book(String title, double price) this constructor has 2 parameters and they are of type string and double
20. The types for the Book class would be String and double and the name of the field would be the word that follows after the type
21. public Pet(String petsName)
    {
     pet = petName
    } 
23. The difference between the headers is that they don't have the same variable name and in the body they do not have the same statement
24. How much money is in the ticket machine
25. The return statement does not need to be changed 
27. When you remove the return statement the error message that shows is "not a statement"
28. The main difference between the methods is their body
29. The insertMoney and printTicket methods dont have a return statement because when you insert an amount the return statement is the balance and for the print your not looking to get a value back   